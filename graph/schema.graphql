type Allowlist @entity {
  id: String!
  root: Bytes!
  claim: Claim!
}

type Claim @entity {
  id: String!
  creation: BigInt!
  tokenID: BigInt!
  contract: String!
  uri: String
  creator: Bytes
  owner: Bytes
  totalUnits: BigInt
  metaData: HypercertMetadata
  allowlist: Allowlist
}

type HypercertMetadata @entity {
  id: ID!
  name: String
  description: String
  image: String
  external_url: String
  version: String
  ref: String
  properties: [Attribute!]
  claimData: [ClaimData!]
}

type ClaimData @entity {
  id: String!
  impactScope: [String!]!
  workScope: [String!]!
  workTimeframe: [BigInt!]!
  impactTimeframe: [BigInt!]!
  contributors: [String!]!
  rights: [String!]!
}

type Attribute @entity {
  id: String!
  traitType: String!
  value: String!
}

type ClaimToken @entity {
  id: String!
  tokenID: BigInt!
  claim: Claim!
  owner: Bytes!
  units: BigInt!
  offers: [Offer!] @derivedFrom(field: "fractionID")
}

type Token @entity {
  id: String!
  name: String!
  symbol: String
  decimals: BigInt
}

type AcceptedToken @entity {
  id: String!
  token: Token!
  minimumAmountPerUnit: BigInt!
  accepted: Boolean!
}

enum OfferStatus {
  Open
  Fulfilled
  Cancelled
}

type Offer @entity {
  id: String!
  fractionID: ClaimToken!
  unitsAvailable: BigInt!
  minUnitsPerTrade: BigInt!
  maxUnitsPerTrade: BigInt!
  status: OfferStatus!
  acceptedTokens: [AcceptedToken!]!
}

type Trade @entity {
  id: String!
  buyer: Bytes!
  offerID: Offer!
  unitsSold: BigInt!
  token: Token!
  amountPerUnit: BigInt!
}
