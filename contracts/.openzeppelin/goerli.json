{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xcC08266250930E98256182734913Bf1B36102072",
      "txHash": "0xdd28554fdc7097c8736aa97a6c6c7c35a692fc4ec50146c493c0b21660f7f57f",
      "kind": "uups"
    },
    {
      "address": "0xb625A44D3334E470978055000DbDeB5d921D33eB",
      "txHash": "0xe67e6414f34e3d9091a8976230de239264145a47ad82a20bd6ec11a641911b28",
      "kind": "uups"
    },
    {
      "address": "0x3956fe42ce499aeE5fafb7e0558616238AD00DA1",
      "txHash": "0x7578b126c6e81f4ee0a525624b717e7ff69347365c825e0a209b9971700291bb",
      "kind": "uups"
    },
    {
      "address": "0x94a04Ce2e537eaf2Bdabd629dE503797e7021E87",
      "txHash": "0xe06f2cef9e00c58ae7e68c8e212a87f374611df4ad136f8c9121e8e7eaadf5a4",
      "kind": "uups"
    }
  ],
  "impls": {
    "403e1a15fd253f82a1aadee7d23b6765ce0ddd74c411835cc7a84975aa512c47": {
      "address": "0xb175b2B2e443058D208356DbF34c9C734AC8b99D",
      "txHash": "0xe9cb64c09c32299171a262cb3eba8146a7265d85ebda5cc2330379d852e554df",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "typeCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:18"
          },
          {
            "label": "owners",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:29"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:30"
          },
          {
            "label": "tokenValues",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:32"
          },
          {
            "label": "maxIndex",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:33"
          },
          {
            "label": "tokenUserBalances",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:34"
          },
          {
            "label": "merkleRoots",
            "offset": 0,
            "slot": "407",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:16"
          },
          {
            "label": "hasBeenClaimed",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4167b5dc5ac7ea3ad3926286b3bcbaf7b885dbfd0053dc1eb8981593d2153ea7": {
      "address": "0x22a92757825082FA5C23CFd8fc172eb00a5C9A36",
      "txHash": "0x238ba960f7ee96794758acb3942a21a0e4472071822e90def0ce4e73e02faf36",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "typeCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:24"
          },
          {
            "label": "owners",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:36"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:39"
          },
          {
            "label": "tokenValues",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:42"
          },
          {
            "label": "maxIndex",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:46"
          },
          {
            "label": "tokenUserBalances",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:49"
          },
          {
            "label": "merkleRoots",
            "offset": 0,
            "slot": "407",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:21"
          },
          {
            "label": "hasBeenClaimed",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "334e76af5acaa79d80ec6977b9868fa7bc94f89108545abce79baad1ad21ff33": {
      "address": "0x73F0e3502E54878ac59153b5A957E7c350319258",
      "txHash": "0x21fef453e543b1ce1c5cf9cf1356d1b0b86f274f09e4255da7f00626ae8e7280",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "typeCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:24"
          },
          {
            "label": "owners",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:36"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:39"
          },
          {
            "label": "tokenValues",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:42"
          },
          {
            "label": "maxIndex",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:46"
          },
          {
            "label": "tokenUserBalances",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:49"
          },
          {
            "label": "merkleRoots",
            "offset": 0,
            "slot": "407",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:21"
          },
          {
            "label": "hasBeenClaimed",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "34a0091ea1e47aaa34ee3d363c4bbaa551052d8044aa61e4eb2d75b039bb033e": {
      "address": "0x8c7FDbE149b4040b28556741Cc33171724B88457",
      "txHash": "0xd628db7afe620cd20659a08e4bde2d263fcd63b108f874d36f5e2276ce37aa8e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "typeCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:24"
          },
          {
            "label": "owners",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:36"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:39"
          },
          {
            "label": "tokenValues",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:42"
          },
          {
            "label": "maxIndex",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:46"
          },
          {
            "label": "tokenUserBalances",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:49"
          },
          {
            "label": "merkleRoots",
            "offset": 0,
            "slot": "407",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:21"
          },
          {
            "label": "hasBeenClaimed",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "647fb5ddb76ee1b2823190147e4b0afea84df2c020f87fe2f919ddd759e73c44": {
      "address": "0xA4CdBe46ac9aB520d9CD238A7a6b71B990038668",
      "txHash": "0x1e6383af34cae32a26271fbc5e1f427b8921473fb72520878ea64351dbd58939",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "typeCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:24"
          },
          {
            "label": "owners",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:36"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:39"
          },
          {
            "label": "tokenValues",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:42"
          },
          {
            "label": "maxIndex",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:46"
          },
          {
            "label": "tokenUserBalances",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:49"
          },
          {
            "label": "merkleRoots",
            "offset": 0,
            "slot": "407",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:22"
          },
          {
            "label": "hasBeenClaimed",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "273bee52edc0e8ebfdc45c7dff0a7795619041c44f180ecc62270b6c789c6749": {
      "address": "0x7e9550639b2843C88b5346F2DaF8177E70DA1a90",
      "txHash": "0xc71915a32e19aa43fbe4ba4b506ba2d2a8888c113cd554b0691eeb8f467c7f14",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "typeCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:23"
          },
          {
            "label": "owners",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:35"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:38"
          },
          {
            "label": "tokenValues",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:41"
          },
          {
            "label": "maxIndex",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:45"
          },
          {
            "label": "tokenUserBalances",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:48"
          },
          {
            "label": "merkleRoots",
            "offset": 0,
            "slot": "407",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:19"
          },
          {
            "label": "hasBeenClaimed",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "82b505115e01f714d738fae141b6de7a006f25de18bc6845bef9c7978f2f3052": {
      "address": "0xFDB51DB8Fb3FB8Bf452C3889fEb39685BD0919F8",
      "txHash": "0x1750178e606564ad406f82ad92da92ad3ad3a1a97062b11f722cf4c3dbb72c7e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "typeCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:23"
          },
          {
            "label": "owners",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:35"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:38"
          },
          {
            "label": "tokenValues",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:41"
          },
          {
            "label": "maxIndex",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:45"
          },
          {
            "label": "tokenUserBalances",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:48"
          },
          {
            "label": "merkleRoots",
            "offset": 0,
            "slot": "407",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:19"
          },
          {
            "label": "hasBeenClaimed",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "16159f3f613c244918fdab74b618585cd253b978293be20b5c27219ed4518ddb": {
      "address": "0x0104B208b808D5BE404E53cE487343c0ea146C06",
      "txHash": "0x24f9336c237c08e3d9563148234696a163e9fbd9dc442ff1532c852c6321834d",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "typeCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:23"
          },
          {
            "label": "owners",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:35"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:38"
          },
          {
            "label": "tokenValues",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:41"
          },
          {
            "label": "maxIndex",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:45"
          },
          {
            "label": "tokenUserBalances",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:48"
          },
          {
            "label": "merkleRoots",
            "offset": 0,
            "slot": "407",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:19"
          },
          {
            "label": "hasBeenClaimed",
            "offset": 0,
            "slot": "408",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:20"
          },
          {
            "label": "typeRestrictions",
            "offset": 0,
            "slot": "409",
            "type": "t_mapping(t_uint256,t_enum(TransferRestrictions)6328)",
            "contract": "HypercertMinter",
            "src": "src/HypercertMinter.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(TransferRestrictions)6328": {
            "label": "enum TransferRestrictions",
            "members": [
              "AllowAll",
              "DisallowAll",
              "FromCreatorOnly"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(TransferRestrictions)6328)": {
            "label": "mapping(uint256 => enum TransferRestrictions)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b3c4046dc45649fc44fac804b9dfc3641937e3170bab34d0476cc1dc3a9f088e": {
      "address": "0xb386C16Cc29E9F27a059Cb4C1Ebe1089cA556893",
      "txHash": "0xf215184be574432b76bf2f5c8b5aa88256c5675000bccabd1bc9908842046d8d",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "typeCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:17"
          },
          {
            "label": "owners",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:26"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:29"
          },
          {
            "label": "tokenValues",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:32"
          },
          {
            "label": "maxIndex",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_uint256)23_storage",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:344"
          },
          {
            "label": "merkleRoots",
            "offset": 0,
            "slot": "429",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:17"
          },
          {
            "label": "hasBeenClaimed",
            "offset": 0,
            "slot": "430",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:18"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "431",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "432",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "typeRestrictions",
            "offset": 0,
            "slot": "481",
            "type": "t_mapping(t_uint256,t_enum(TransferRestrictions)6464)",
            "contract": "HypercertMinter",
            "src": "src/HypercertMinter.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "482",
            "type": "t_array(t_uint256)28_storage",
            "contract": "HypercertMinter",
            "src": "src/HypercertMinter.sol:178"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)23_storage": {
            "label": "uint256[23]",
            "numberOfBytes": "736"
          },
          "t_array(t_uint256)28_storage": {
            "label": "uint256[28]",
            "numberOfBytes": "896"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(TransferRestrictions)6464": {
            "label": "enum IHypercertToken.TransferRestrictions",
            "members": [
              "AllowAll",
              "DisallowAll",
              "FromCreatorOnly"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(TransferRestrictions)6464)": {
            "label": "mapping(uint256 => enum IHypercertToken.TransferRestrictions)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e362cd15fa01e1ff4f2c50c96ad54c19090b36255c1f5d5ad192eb3e7e2d5063": {
      "address": "0x40FB22f74cf966A1fa4eE5FD98430B7Fb8663f02",
      "txHash": "0x7ab3207aa85d10185ee5ea10d87a6edb5e7fdc406b09dd6d38f8e4b04cf3e635",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "typeCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:17"
          },
          {
            "label": "owners",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:26"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:29"
          },
          {
            "label": "tokenValues",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:32"
          },
          {
            "label": "maxIndex",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_uint256)23_storage",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:341"
          },
          {
            "label": "merkleRoots",
            "offset": 0,
            "slot": "429",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:17"
          },
          {
            "label": "hasBeenClaimed",
            "offset": 0,
            "slot": "430",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:18"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "431",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "432",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "typeRestrictions",
            "offset": 0,
            "slot": "481",
            "type": "t_mapping(t_uint256,t_enum(TransferRestrictions)6442)",
            "contract": "HypercertMinter",
            "src": "src/HypercertMinter.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "482",
            "type": "t_array(t_uint256)28_storage",
            "contract": "HypercertMinter",
            "src": "src/HypercertMinter.sol:180"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)23_storage": {
            "label": "uint256[23]",
            "numberOfBytes": "736"
          },
          "t_array(t_uint256)28_storage": {
            "label": "uint256[28]",
            "numberOfBytes": "896"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(TransferRestrictions)6442": {
            "label": "enum IHypercertToken.TransferRestrictions",
            "members": [
              "AllowAll",
              "DisallowAll",
              "FromCreatorOnly"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(TransferRestrictions)6442)": {
            "label": "mapping(uint256 => enum IHypercertToken.TransferRestrictions)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d5114a24d96b6be157f2d2d9331132437729ee719962b56fda19c4c711b38eb6": {
      "address": "0x6a8eFe42eA21EF510d21e2713D9cb25523385Bde",
      "txHash": "0x0fa68b7f2ed86a4bb493b97fdfeb4a2e418b57beca1e4f1ad7f0b31316da5a5e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "typeCounter",
            "offset": 0,
            "slot": "401",
            "type": "t_uint256",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:17"
          },
          {
            "label": "owners",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:26"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:29"
          },
          {
            "label": "tokenValues",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:32"
          },
          {
            "label": "maxIndex",
            "offset": 0,
            "slot": "405",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_uint256)23_storage",
            "contract": "SemiFungible1155",
            "src": "src/SemiFungible1155.sol:344"
          },
          {
            "label": "merkleRoots",
            "offset": 0,
            "slot": "429",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:17"
          },
          {
            "label": "hasBeenClaimed",
            "offset": 0,
            "slot": "430",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "AllowlistMinter",
            "src": "src/AllowlistMinter.sol:18"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "431",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "432",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "typeRestrictions",
            "offset": 0,
            "slot": "481",
            "type": "t_mapping(t_uint256,t_enum(TransferRestrictions)6505)",
            "contract": "HypercertMinter",
            "src": "src/HypercertMinter.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "482",
            "type": "t_array(t_uint256)28_storage",
            "contract": "HypercertMinter",
            "src": "src/HypercertMinter.sol:188"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)23_storage": {
            "label": "uint256[23]",
            "numberOfBytes": "736"
          },
          "t_array(t_uint256)28_storage": {
            "label": "uint256[28]",
            "numberOfBytes": "896"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(TransferRestrictions)6505": {
            "label": "enum IHypercertToken.TransferRestrictions",
            "members": [
              "AllowAll",
              "DisallowAll",
              "FromCreatorOnly"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(TransferRestrictions)6505)": {
            "label": "mapping(uint256 => enum IHypercertToken.TransferRestrictions)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
